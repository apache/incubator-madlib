/* ----------------------------------------------------------------------- *//**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *
 * @file model_arch_table.sql_in
 *
 * @brief SQL functions for multilayer perceptron
 * @date June 2012
 *
 *
 *//* ----------------------------------------------------------------------- */

m4_include(`SQLCommon.m4')
/**
@addtogroup grp_keras_model_arch

@brief Utility function to load model architectures and weights into a table for
use by deep learning algorithms.

\warning <em> This MADlib method is still in early stage development.
Interface and implementation are subject to change. </em>

<div class="toc"><b>Contents</b><ul>
<li class="level1"><a href="#load_keras_model">Load Model</a></li>
<li class="level1"><a href="#delete_keras_model">Delete Model</a></li>
<li class="level1"><a href="#example">Examples</a></li>
</ul></div>

This utility function loads model architectures and
weights into a table for use by deep learning algorithms.
Model architecture is in JSON form
and model weights are in the form of double precision arrays.
If the output table already exists, a new row is inserted
into the table so it can act as a repository for multiple model
architectures and weights.

There is also a utility function to delete a model
from the table.

@anchor load_keras_model
@par Load Model

<pre class="syntax">
load_keras_model(
    keras_model_arch_table
    model_arch
)
</pre>
\b Arguments
<dl class="arglist">
  <dt>keras_model_arch_table</dt>
  <dd>VARCHAR. Output table to load keras model architecture and weights.
  </dd>

  <dt>model_arch</dt>
  <dd>JSON. JSON of the model architecture to load.
  </dd>
</dl>

<b>Output table</b>
<br>
    The output table contains the following columns:
    <table class="output">
      <tr>
        <th>model_id</th>
        <td>SERIAL PRIMARY KEY. Model ID.
        </td>
      </tr>
      <tr>
        <th>model_arch</th>
        <td>JSON. JSON blob of the model architecture.
        </td>
      </tr>
      <tr>
        <th>model_weights</th>
        <td>DOUBLE PRECISION[]. Weights of the model which may be use for warm start.
        </td>
      </tr>
      <tr>
        <th>__internal_madlib_id__</th>
        <td>TEXT. Unique id for model arch.  This is an id used internally be MADlib.
        </td>
      </tr>
    </table>
</br>

@anchor delete_keras_model
@par Delete Model

<pre class="syntax">
delete_keras_model(
    keras_model_arch_table
    model_id
)
</pre>
\b Arguments
<dl class="arglist">
  <dt>keras_model_arch_table</dt>
  <dd>VARCHAR. Table containing model architectures and weights.
  </dd>

  <dt>model_id</dt>
  <dd>INTEGER. The id of the model to be deleted.
  </dd>
</dl>

@anchor example
@par Examples
-#  Define or obtain model.  Let's say we have a Keras model
architecture that looks like this:
<pre class="example">
model = Sequential()
model.add(Dense(2, input_dim=3, name='dense_1'))
model.add(Dense(3, name='dense_2'))
...
model.to_json
</pre>
This is represented by the following JSON:
<pre class="result">
'{"class_name": "Sequential", "keras_version": "2.1.6",
"config": [{"class_name": "Dense", "config": {"kernel_initializer":
{"class_name": "VarianceScaling", "config": {"distribution": "uniform",
"scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1",
"kernel_constraint": null, "bias_regularizer": null, "bias_constraint":
null, "dtype": "float32", "activation": "linear", "trainable": true,
"kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros",
"config": {}}, "units": 2, "batch_input_shape": [null, 3],
"use_bias": true, "activity_regularizer": null}}, {"class_name": "Dense",
"config": {"kernel_initializer": {"class_name": "VarianceScaling",
"config": {"distribution": "uniform", "scale": 1.0, "seed": null,
"mode": "fan_avg"}}, "name": "new_dense", "kernel_constraint": null,
"bias_regularizer": null, "bias_constraint": null, "activation": "linear",
"trainable": true, "kernel_regularizer": null,
"bias_initializer": {"class_name": "Zeros", "config": {}},
"units": 10, "use_bias": true, "activity_regularizer": null}}],
"backend": "tensorflow"}'
</pre>
-#  Load the model into the model table:
<pre class="example">
DROP TABLE IF EXISTS model_arch_library;
SELECT madlib.load_keras_model('model_arch_library',   -- Output table
$$
{"class_name": "Sequential", "keras_version": "2.1.6",
"config": [{"class_name": "Dense", "config": {"kernel_initializer":
{"class_name": "VarianceScaling", "config": {"distribution": "uniform",
"scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1",
"kernel_constraint": null, "bias_regularizer": null, "bias_constraint":
null, "dtype": "float32", "activation": "linear", "trainable": true,
"kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros",
"config": {}}, "units": 2, "batch_input_shape": [null, 3],
"use_bias": true, "activity_regularizer": null}}, {"class_name": "Dense",
"config": {"kernel_initializer": {"class_name": "VarianceScaling",
"config": {"distribution": "uniform", "scale": 1.0, "seed": null,
"mode": "fan_avg"}}, "name": "new_dense", "kernel_constraint": null,
"bias_regularizer": null, "bias_constraint": null, "activation": "linear",
"trainable": true, "kernel_regularizer": null,
"bias_initializer": {"class_name": "Zeros", "config": {}},
"units": 10, "use_bias": true, "activity_regularizer": null}}],
"backend": "tensorflow"}
$$ ::json   -- JSON blob
);
SELECT * FROM model_arch_library;
</pre>
<pre class="result">
 model_id |                                 model_arch                                  | model_weights |            __internal_madlib_id__
----------+-----------------------------------------------------------------------------+---------------+----------------------------------------------
        1 |                                                                             |               | __madlib_temp_79462163_1553817233_28408205__
          : {"class_name": "Sequential", "keras_version": "2.1.6",
          : "config": [{"class_name": "Dense", "config": {"kernel_initializer":
          : {"class_name": "VarianceScaling", "config": {"distribution": "uniform",
          : "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1",
          : "kernel_constraint": null, "bias_regularizer": null, "bias_constraint":
          : null, "dtype": "float32", "activation": "linear", "trainable": true,
          : "kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros",
          : "config": {}}, "units": 2, "batch_input_shape": [null, 3],
          : "use_bias": true, "activity_regularizer": null}}, {"class_name": "Dense",
          : "config": {"kernel_initializer": {"class_name": "VarianceScaling",
          : "config": {"distribution": "uniform", "scale": 1.0, "seed": null,
          : "mode": "fan_avg"}}, "name": "new_dense", "kernel_constraint": null,
          : "bias_regularizer": null, "bias_constraint": null, "activation": "linear",
          : "trainable": true, "kernel_regularizer": null,
          : "bias_initializer": {"class_name": "Zeros", "config": {}},
          : "units": 10, "use_bias": true, "activity_regularizer": null}}],
          : "backend": "tensorflow"}
          :
(1 row)
</pre>
-# Load another model into the same table:
<pre class="example">
SELECT madlib.load_keras_model('model_arch_library',   -- Output table
$$
{"class_name": "Sequential", "keras_version": "2.1.6",
"config": [{"class_name": "Dense", "config": {"kernel_initializer":
{"class_name": "VarianceScaling", "config": {"distribution": "uniform",
"scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1",
"kernel_constraint": null, "bias_regularizer": null, "bias_constraint":
null, "dtype": "float32", "activation": "linear", "trainable": true,
"kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros",
"config": {}}, "units": 2, "batch_input_shape": [null, 3],
"use_bias": true, "activity_regularizer": null}}, {"class_name": "Dense",
"config": {"kernel_initializer": {"class_name": "VarianceScaling",
"config": {"distribution": "uniform", "scale": 1.0, "seed": null,
"mode": "fan_avg"}}, "name": "new_dense", "kernel_constraint": null,
"bias_regularizer": null, "bias_constraint": null, "activation": "linear",
"trainable": true, "kernel_regularizer": null,
"bias_initializer": {"class_name": "Zeros", "config": {}},
"units": 10, "use_bias": true, "activity_regularizer": null}}],
"backend": "tensorflow"}
$$ ::json   -- JSON blob
);
SELECT * FROM model_arch_library;
</pre>
<pre class="result">
 model_id |                                 model_arch                                  | model_weights |            __internal_madlib_id__
----------+-----------------------------------------------------------------------------+---------------+----------------------------------------------
        1 |                                                                             |               | __madlib_temp_79462163_1553817233_28408205__
          : {"class_name": "Sequential", "keras_version": "2.1.6",
          : "config": [{"class_name": "Dense", "config": {"kernel_initializer":
          : {"class_name": "VarianceScaling", "config": {"distribution": "uniform",
          : "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1",
          : "kernel_constraint": null, "bias_regularizer": null, "bias_constraint":
          : null, "dtype": "float32", "activation": "linear", "trainable": true,
          : "kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros",
          : "config": {}}, "units": 2, "batch_input_shape": [null, 3],
          : "use_bias": true, "activity_regularizer": null}}, {"class_name": "Dense",
          : "config": {"kernel_initializer": {"class_name": "VarianceScaling",
          : "config": {"distribution": "uniform", "scale": 1.0, "seed": null,
          : "mode": "fan_avg"}}, "name": "new_dense", "kernel_constraint": null,
          : "bias_regularizer": null, "bias_constraint": null, "activation": "linear",
          : "trainable": true, "kernel_regularizer": null,
          : "bias_initializer": {"class_name": "Zeros", "config": {}},
          : "units": 10, "use_bias": true, "activity_regularizer": null}}],
          : "backend": "tensorflow"}
          :
        2 |                                                                             |               | __madlib_temp_86851986_1553817356_19026896__
          : {"class_name": "Sequential", "keras_version": "2.1.6",
          : "config": [{"class_name": "Dense", "config": {"kernel_initializer":
          : {"class_name": "VarianceScaling", "config": {"distribution": "uniform",
          : "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1",
          : "kernel_constraint": null, "bias_regularizer": null, "bias_constraint":
          : null, "dtype": "float32", "activation": "linear", "trainable": true,
          : "kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros",
          : "config": {}}, "units": 2, "batch_input_shape": [null, 3],
          : "use_bias": true, "activity_regularizer": null}}, {"class_name": "Dense",
          : "config": {"kernel_initializer": {"class_name": "VarianceScaling",
          : "config": {"distribution": "uniform", "scale": 1.0, "seed": null,
          : "mode": "fan_avg"}}, "name": "new_dense", "kernel_constraint": null,
          : "bias_regularizer": null, "bias_constraint": null, "activation": "linear",
          : "trainable": true, "kernel_regularizer": null,
          : "bias_initializer": {"class_name": "Zeros", "config": {}},
          : "units": 10, "use_bias": true, "activity_regularizer": null}}],
          : "backend": "tensorflow"}
          :
(2 rows)
</pre>
-# Delete one of the models:
<pre class="example">
SELECT madlib.delete_keras_model('model_arch_library',   -- Output table
                                  1                      -- Model id
                                );
SELECT * FROM model_arch_library;
</pre>
<pre class="result">
 model_id |                                 model_arch                                 | model_weights |            __internal_madlib_id__
----------+----------------------------------------------------------------------------+---------------+----------------------------------------------
        2 |                                                                            |               | __madlib_temp_41851307_1553819507_11044889__
          : {"class_name": "Sequential", "keras_version": "2.1.6",
          : "config": [{"class_name": "Dense", "config": {"kernel_initializer":
          : {"class_name": "VarianceScaling", "config": {"distribution": "uniform",
          : "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1",
          : "kernel_constraint": null, "bias_regularizer": null, "bias_constraint":
          : null, "dtype": "float32", "activation": "linear", "trainable": true,
          : "kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros",
          : "config": {}}, "units": 2, "batch_input_shape": [null, 3],
          : "use_bias": true, "activity_regularizer": null}}, {"class_name": "Dense",
          : "config": {"kernel_initializer": {"class_name": "VarianceScaling",
          : "config": {"distribution": "uniform", "scale": 1.0, "seed": null,
          : "mode": "fan_avg"}}, "name": "new_dense", "kernel_constraint": null,
          : "bias_regularizer": null, "bias_constraint": null, "activation": "linear",
          : "trainable": true, "kernel_regularizer": null,
          : "bias_initializer": {"class_name": "Zeros", "config": {}},
          : "units": 10, "use_bias": true, "activity_regularizer": null}}],
          : "backend": "tensorflow"}
          :
(1 row)
</pre>
*/

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.load_keras_model(
    keras_model_arch_table VARCHAR,
    model_arch             JSON,
    model_weights          bytea,
    name                   TEXT,
    description            TEXT
)
    RETURNS VOID AS $$
    PythonFunctionBodyOnlyNoSchema(`deep_learning', `keras_model_arch_table')
    from utilities.control import AOControl
    with AOControl(False):
        keras_model_arch_table.load_keras_model(**globals())
$$ LANGUAGE plpythonu VOLATILE;

-- Function to add a keras model to arch table
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.load_keras_model(
    keras_model_arch_table VARCHAR,
    model_arch             JSON
)
RETURNS VOID AS $$
    SELECT MADLIB_SCHEMA.load_keras_model($1, $2, NULL, NULL, NULL)
$$ LANGUAGE sql VOLATILE
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `MODIFIES SQL DATA');

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.load_keras_model(
    keras_model_arch_table VARCHAR,
    model_arch             JSON,
    model_weights          bytea
)
    RETURNS VOID AS $$
    SELECT MADLIB_SCHEMA.load_keras_model($1, $2, $3, NULL, NULL)
$$ LANGUAGE sql VOLATILE
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `MODIFIES SQL DATA');

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.load_keras_model(
    keras_model_arch_table VARCHAR,
    model_arch             JSON,
    model_weights          bytea,
    name                   TEXT
)
    RETURNS VOID AS $$
    SELECT MADLIB_SCHEMA.load_keras_model($1, $2, $3, $4, NULL)
$$ LANGUAGE sql VOLATILE
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `MODIFIES SQL DATA');






-- Functions for online help
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.load_keras_model(
    message VARCHAR
) RETURNS VARCHAR AS $$
    PythonFunctionBodyOnly(deep_learning, keras_model_arch_table)
    return keras_model_arch_table.KerasModelArchDocumentation.load_keras_model_help(schema_madlib, message)
$$ LANGUAGE plpythonu VOLATILE
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `MODIFIES SQL DATA', `');

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.load_keras_model()
RETURNS VARCHAR AS $$
    PythonFunctionBodyOnly(deep_learning, keras_model_arch_table)
    return keras_model_arch_table.KerasModelArchDocumentation.load_keras_model_help(schema_madlib, '')
$$ LANGUAGE plpythonu VOLATILE
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `MODIFIES SQL DATA', `');

-- Function to delete a keras model from arch table
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.delete_keras_model(
    keras_model_arch_table VARCHAR,
    model_id INTEGER
)
RETURNS VOID AS $$
    PythonFunctionBodyOnlyNoSchema(`deep_learning',`keras_model_arch_table')
    from utilities.control import AOControl
    with AOControl(False):
        keras_model_arch_table.delete_keras_model(**globals())
$$ LANGUAGE plpythonu VOLATILE;

-- Functions for online help
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.delete_keras_model(
    message VARCHAR
) RETURNS VARCHAR AS $$
    PythonFunctionBodyOnly(deep_learning, keras_model_arch_table)
    return keras_model_arch_table.KerasModelArchDocumentation.delete_keras_model_help(schema_madlib, message)
$$ LANGUAGE plpythonu VOLATILE
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `MODIFIES SQL DATA', `');

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.delete_keras_model()
RETURNS VARCHAR AS $$
    PythonFunctionBodyOnly(deep_learning, keras_model_arch_table)
    return keras_model_arch_table.KerasModelArchDocumentation.delete_keras_model_help(schema_madlib, '')
$$ LANGUAGE plpythonu VOLATILE
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `MODIFIES SQL DATA', `');
