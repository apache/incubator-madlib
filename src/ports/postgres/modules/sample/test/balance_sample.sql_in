/* ----------------------------------------------------------------------- *//**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *//* ----------------------------------------------------------------------- */

DROP TABLE IF EXISTS "TEST_s" cascade;

CREATE TABLE "TEST_s"(
    id1 INTEGER,
    "ID2" INTEGER,
    gr1 INTEGER,
    gr2 INTEGER
);

INSERT INTO "TEST_s" VALUES
(1,0,1,1),
(2,0,1,1),
(3,0,1,1),
(4,0,1,1),
(5,0,1,1),
(6,0,1,1),
(7,0,1,1),
(8,0,1,1),
(9,0,1,1),
(9,0,1,1),
(9,0,1,1),
(9,0,1,1),
(0,1,1,2),
(0,2,1,2),
(0,3,1,2),
(0,4,1,2),
(0,5,1,2),
(0,6,1,2),
(10,10,2,2),
(20,20,2,2),
(30,30,2,2),
(40,40,2,2),
(50,50,2,2),
(60,60,2,2),
(70,70,2,2),
(10,10,5,5),
(50,50,5,5),
(88,88,5,5),
(40,40,5,6),
(50,50,5,6),
(60,60,5,6),
(70,70,5,6),
(10,10,6,6),
(60,60,6,6),
(30,30,6,6),
(40,40,6,6),
(50,50,6,6),
(60,60,6,6),
(70,70,6,6),
(50,50,4,2),
(60,60,4,2),
(70,70,4,2),
(50,50,3,2),
(60,60,3,2),
(70,70,3,2)
;

--- Test for random undersampling without replacement
DROP TABLE IF EXISTS out_s;
SELECT balance_sample('"TEST_s"', 'out_s', 'gr1', 'undersample', NULL, NULL, FALSE);
SELECT assert(count(*) = 0, 'Wrong number of samples') FROM
        (select gr1, count(*) as c from out_s group by gr1) as foo where foo.c !=3;

DROP TABLE IF EXISTS out_s1;
SELECT balance_sample('"TEST_s"', 'out_s1', 'gr2', 'undersample', NULL, NULL, FALSE);
SELECT assert(count(*) = 0, 'Wrong number of samples') FROM 
        (select gr2, count(*) as c from out_s1 group by gr2) as foo where foo.c !=3;

--- Test for random undersampling with replacement
DROP TABLE IF EXISTS out_sr2;
SELECT balance_sample('"TEST_s"', 'out_sr2', 'gr1', 'undersample', NULL, NULL, TRUE);
SELECT assert(count(*) = 0, 'Wrong number of samples') FROM 
        (select gr1, count(*) as c from out_sr2 group by gr1) as foo where foo.c !=3;

DROP TABLE IF EXISTS out_sr3;
SELECT balance_sample('"TEST_s"', 'out_sr3', 'gr2', 'undersample', NULL, NULL, TRUE);
select assert(count(*) = 0, 'Wrong number of samples') from 
        (select gr2, count(*) as c from out_sr3 group by gr2) as foo where foo.c != 3;






